Plan:

Big Picture:
We make multiple load balancing algorithms and compare performances

Questions:

1. What is the control group?
shortest path algorithm
    I'm thinking that we just static allocate a shortest path from one host to another

2. How do we compare performances?
We need to compare metrics (throughput, latency, etc.) from one host to another while they are under some network resource contention (b/c thats the whole point of load balancing) -> use iperf

3. How do we standardize network resource contention?
We have some background hosts sending to each other
EX -> Our test metric will be the throughput and latency from h1 to h2
In the background, our network resource contention will be h3 talking to h4 (we can add more if needed)
Key point: there should not be enough bandwidth for one link to handle all that (they must compete for bandwidth on a single link)

4. What network topology will we use?
Fat tree -> multi path equal cost (I'm thinking k=4 cuz paper does 4)
How do we construct a fat tree -> easy, we already did it in a previous homework

Goals
4/29/25:
Set up environment and create fat tree topology (and maybe the control)

4/30/25:
Create first algorithm and set up experiment performance metrics (script)

Rest:
Do the rest -> I forgot which algorithms we were implementings

High Level Ideas for Load Balancing:
We preconfigure some paths from h1 to h2 -> and just round robin the links


Round Robin:
There is a package called NetworkX that can calculate all paths from one host to another (we round robin based on that by installing flow rules?)
But aren't flow rules gonna make swtiches send traffic from h1 to h2 through same path?

How do we fix this: we match based on IP + TCP port
We match on those because we want to create parallel connections between h1 to h2 -> (so same traffic, but different TCP ports)
Thus, each connection will use a different path (AKA round robin)

So what does implementation look like?
Given: we have a list of all paths from one host to another -> lets say h1 to h2 has 2 paths

The controller is gonna have a counter from one host to another
Lets say h1 to h2 packet comes in at TCP port src 10
Controller will then install entries for path 1
Incrment counter from h1 to h2

Lets say h1 to h2 packet comes in at TCP port src 15 (b/c different TCP connections have same IPs but DIFFERENT ports) -> meaning it won't match the flow rules to go through path 1
Controller will then install entries for path 2
Incrment counter from h1 to h2

Lets say h1 to h2 packet comes in at TCP port src 20 (b/c different TCP connections have same IPs but DIFFERENT ports) -> meaning it won't match the flow rules to go through path 1 or path 2
We see that we are at counter 2 and we don't have a 3rd path
Thus we install entries for path 1
Incrment counter from h1 to h2

Keeps going on




